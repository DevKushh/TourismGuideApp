<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="kushDataSet" targetNamespace="http://tempuri.org/kushDataSet.xsd" xmlns:mstns="http://tempuri.org/kushDataSet.xsd" xmlns="http://tempuri.org/kushDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="kushConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="kushConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TourismApp.Properties.Settings.GlobalReference.Default.kushConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="kushConnectionString (Settings)" DbObjectName="kush.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([Student ID] = @Original_Student_ID) AND ([Stundent Name] = @Original_Stundent_Name) AND ((@IsNull_Student_Email = 1 AND [Student Email] IS NULL) OR ([Student Email] = @Original_Student_Email)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Stundent_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Stundent Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Student_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Student_Email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Student Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([Student ID], [Stundent Name], [Student Email]) VALUES (@Student_ID, @Stundent_Name, @Student_Email);
SELECT [Student ID], [Stundent Name], [Student Email] FROM Student WHERE ([Student ID] = @Student_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Stundent_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Stundent Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Student_Email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Student Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [Student ID], [Stundent Name], [Student Email] FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [Student ID] = @Student_ID, [Stundent Name] = @Stundent_Name, [Student Email] = @Student_Email WHERE (([Student ID] = @Original_Student_ID) AND ([Stundent Name] = @Original_Stundent_Name) AND ((@IsNull_Student_Email = 1 AND [Student Email] IS NULL) OR ([Student Email] = @Original_Student_Email)));
SELECT [Student ID], [Stundent Name], [Student Email] FROM Student WHERE ([Student ID] = @Student_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Stundent_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Stundent Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Student_Email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Student Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Stundent_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Stundent Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Student_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Student_Email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Student Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Student ID" DataSetColumn="Student ID" />
              <Mapping SourceColumn="Stundent Name" DataSetColumn="Stundent Name" />
              <Mapping SourceColumn="Student Email" DataSetColumn="Student Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="kushDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="kushDataSet" msprop:Generator_DataSetName="kushDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Student" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_RowClassName="StudentRow" msprop:Generator_TableVarName="tableStudent" msprop:Generator_UserTableName="Student">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Student_x0020_ID" msprop:Generator_ColumnPropNameInRow="Student_ID" msprop:Generator_ColumnPropNameInTable="Student_IDColumn" msprop:Generator_ColumnVarNameInTable="columnStudent_ID" msprop:Generator_UserColumnName="Student ID" type="xs:int" />
              <xs:element name="Stundent_x0020_Name" msprop:Generator_ColumnPropNameInRow="Stundent_Name" msprop:Generator_ColumnPropNameInTable="Stundent_NameColumn" msprop:Generator_ColumnVarNameInTable="columnStundent_Name" msprop:Generator_UserColumnName="Stundent Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Student_x0020_Email" msprop:Generator_ColumnPropNameInRow="Student_Email" msprop:Generator_ColumnPropNameInTable="Student_EmailColumn" msprop:Generator_ColumnVarNameInTable="columnStudent_Email" msprop:Generator_UserColumnName="Student Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:Student_x0020_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>